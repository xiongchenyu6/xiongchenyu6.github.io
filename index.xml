<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>我的全新 Hugo 网站</title><link>http://example.org/</link><description>我的全新 Hugo 网站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiongchenyu6@gmail.com (xiongchenyu)</managingEditor><webMaster>xiongchenyu6@gmail.com (xiongchenyu)</webMaster><lastBuildDate>Sat, 28 Jan 2023 08:10:00 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>iam</title><link>http://example.org/posts/iam/</link><pubDate>Sat, 28 Jan 2023 08:10:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/iam/</guid><description>iam fdsadasf
iam can bind to ec2
check fetch-ec2-metadata.service if iam roles not working</description></item><item><title>solidity</title><link>http://example.org/posts/solidity/</link><pubDate>Wed, 07 Dec 2022 21:34:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/solidity/</guid><description>solidity caveats Function type Type Description Alter State pure Doesn&amp;rsquo;t read or write data [ ] view Reads, but doesn&amp;rsquo;t write data [ ] nonpayable Default, Probably writes data [X] payable Expecting payment of ether [X] Calling smart contracts functions Method Create Transaction Alter State call() [ ] [ ] send() [X] [X]</description></item><item><title>Tencent</title><link>http://example.org/posts/tencents/</link><pubDate>Tue, 22 Feb 2022 21:44:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/tencents/</guid><description>Presentations OKR 外部账单新需求接入到收敛周期从1周到2周缩减到3天到1周 账单调度模块使用go重写。 至少有10个以上 海外外部对账 使用对账平台 python3 main.py -l debug upload &amp;ndash;cluster singapore_cros</description></item><item><title>Nix flake for devops</title><link>http://example.org/posts/nffd/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/nffd/</guid><description>develop shell build stage test stage CI/CD publish stage infra as code deploy</description></item><item><title>OOP 和 FP 在架构弹性的比较-2</title><link>http://example.org/posts/fp_vs_oop_2/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/fp_vs_oop_2/</guid><description>承接上文结论，简单 OOP 范式下数据结构的扩展成本比较低下，而 FP 范式下算子的扩展成本 比较低下，在解决代码复杂度上是没有,好哒方法，但是代码组织结构</description></item><item><title>自生成key以及签名</title><link>http://example.org/posts/how-to-generate-self-signed-certificates/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/how-to-generate-self-signed-certificates/</guid><description><![CDATA[dsfasafafdsfdsaffdsafdafdsffdfdfadsfsfdfasf dafdsfdsfdsafsdfdfasdfdfsdf 1 2 3 4 openssl req -new -x509 -subj &#34;/C=SG/CN=fingerone.com&#34; \ -addext &#34;subjectAltName = DNS:fingerone.com&#34; \ -addext &#34;certificatePolicies = 1.2.3.4&#34; \ --keyout localhost.pem -out localhost.pem -days 365 -nodes 1 2 3 4 openssl req -new -x509 -subj &#34;/C=SG/CN=fingertwo.com&#34; \ -addext &#34;subjectAltName = DNS:fingertwo.com&#34; \ -addext &#34;certificatePolicies = 1.2.3.4&#34; \ --keyout localhost2.pem -out localhost2.pem -days 365 -nodes 1 2 3 4 openssl req -new -x509 -subj &#34;/C=SG/CN=riskcontrol.com&#34; \ -addext]]></description></item><item><title>自生成key以及签名</title><link>http://example.org/posts/nffdddd/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/nffdddd/</guid><description><![CDATA[1 2 3 4 openssl req -new -x509 -subj &#34;/C=SG/CN=fingerone.com&#34; \ -addext &#34;subjectAltName = DNS:fingerone.com&#34; \ -addext &#34;certificatePolicies = 1.2.3.4&#34; \ --keyout localhost.pem -out localhost.pem -days 365 -nodes 1 2 3 4 openssl req -new -x509 -subj &#34;/C=SG/CN=fingertwo.com&#34; \ -addext &#34;subjectAltName = DNS:fingertwo.com&#34; \ -addext &#34;certificatePolicies = 1.2.3.4&#34; \ --keyout localhost2.pem -out localhost2.pem -days 365 -nodes 1 2 3 4 openssl req -new -x509 -subj &#34;/C=SG/CN=riskcontrol.com&#34; \ -addext &#34;subjectAltName =]]></description></item><item><title>OOP 和 FP 在架构弹性的比较-1</title><link>http://example.org/posts/fp_vs_oop_1/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/fp_vs_oop_1/</guid><description>对于一个互联网公司的程序，代码的范式是很重要的，好的范式可以让你面对产品经理的指 示的时候痛苦感会降低， 这个时候架构就非常重要了。那么我将以 scala</description></item><item><title>Post 2</title><link>http://example.org/posts/post-2/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/post-2/</guid><description>This post has no date.
Export this second post only by bringing point here and doing M-x org-hugo-export-wim-to-md.
This is some text before the first heading of this post.
sdkfjdkalsf dsafdsfdklsfl
dsfas fasdfas fsdaf safkasjf asjfkasjf
asfjlsakf asfsajf
asf</description></item><item><title>GNUPG</title><link>http://example.org/posts/gnupg/</link><pubDate>Sat, 20 Nov 2021 16:12:00 +0800</pubDate><author>作者</author><guid>http://example.org/posts/gnupg/</guid><description>Setup permission 1 2 find ~/.gnupg -type f -exec chmod 600 {} \; # Set 600 for files find ~/.gnupg -type d -exec chmod 700 {} \; # Set 700 for directories GNUPG Encryption Use recipient public key to encrypt message so only recipient can decrypt and view it decrypt ATTACH 1 2 gpg --decrypt a.sh.gpg gpg -q --pinentry-mode loopback --for-your-eyes-only --no-tty -d ~/.password/gmail.gpg encrypt 1 2 gpg --encrypt -r person@email.</description></item></channel></rss>