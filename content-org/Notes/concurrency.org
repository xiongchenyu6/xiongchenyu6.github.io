:PROPERTIES:
:ID:       112825ae-69f6-470e-aedc-c0e6e2dbcb30
:END:
#+title: Concurrency
#+date: [2021-12-28 Tue 12:36]

* Blocking
+ Blocking
+ Starvation Free
* Obstruction free
* Lock free(LF)
[[attachment:_20211228_132424screenshot.png]]
 at least some thread is doing progress on its work
* Wait free(WF)
any given thread provided with a time-slice will be able to make some progress and eventually complete.
** Wait-Free Bounded(WFB)
  #+begin_src cpp :namespaces std :flags  -std=c++20 :includes <iostream>
AtomicIntegerArray intArray = new AtomicIntegerArray(MAX_THREADS);

public void funcWaitFreeBounded() {
          for (int i = 0; i < MAX_THREADS ; i++) {
                  intArray.set(i, 1);
          }
}

  #+end_src
** Wait-Free Population Oblivious(WFPO)
#+begin_src cpp :namespaces std :flags  -std=c++20 :includes <iostream>
atomic<int> counter;
void funcWaitFreeBoundedPopulationOblivious() {
    counter.fetch_add(1);
}
#+end_src

* hazzard pointer
- protect
- retain
- exchange
* lock
锁要保证公平性
