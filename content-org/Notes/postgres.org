:PROPERTIES:
:ID:       8a6e73b5-b68c-4ac5-a249-d5a8d01004a3
:END:
#+title: postgres
#+date: [2021-11-26 Fri 22:05]

* Install
#+begin_src dockerfile
USER postgres
RUN psql -U username -d mydatabase -c "ALTER USER postgres WITH PASSWORD 'pass'"
#+end_src
* Create new table and new username
#+begin_src sql
create database rustwebserver;
create role rustwebserver with login password 'rustwebserver';
grant all privileges on database rustwebserver to rustwebserver;
CREATE DATABASE rustwebserver WITH OWNER rustwebserver TEMPLATE template0 ENCODING UTF8 LC_COLLATE 'en_US.UTF-8' LC_CTYPE 'en_US.UTF-8';
Delete database rustWebServerdb;
#+end_src
* Export and import
export
#+begin_src sql
\copy (select * from xx) TO "xx.csv"
#+end_src
import
#+begin_src
COPY sample_table_name
FROM 'C:\sampledb\sample_data.csv'
DELIMITER ','
CSV HEADER;
#+end_src
* get config path
#+begin_src dockerfile
psql -U postgres -c 'SHOW config_file'
#+end_src
* show all DB size
#+begin_src sql
select pg_database.datname, pg_size_pretty(pg_database_size(pg_database.datname)) AS size from pg_database;
select relname, pg_size_pretty(pg_relation_size(relid)) from pg_stat_user_tables order by pg_relation_size(relid) desc;
#+end_src

* Logical replication
** create logical replication
#+begin_src  sql
SELECT * FROM pg_create_logical_replication_slot('slot_repls', 'wal2json');
#+end_src
** list all logical replications
#+begin_src sql
SELECT * FROM pg_replication_slots;
#+end_src
** drop
#+begin_src sql
select pg_drop_replication_slot('bottledwater');
#+end_src
** view
#+begin_src sql
SELECT * FROM pg_logical_slot_get_changes('slot_repls', NULL, NULL);
SELECT * FROM pg_logical_slot_peek_changes('slot_repls', NULL, NULL);
#+end_src

* insert
#+begin_src sql
INSERT INTO table_name(statis_date, type, spoa_id, offer_id, service_name, result, cnt, amt, currency) VALUES (20111128, 'os_steam', '1', '1', '1', 'SUCCESS',1, 12, 'USD');
#+end_src

#+begin_src sh
psql -v ON_ERROR_STOP=1 --username chenyu --dbname teg_sett <<- EOSQL
    SELECT * FROM t_billing_center_check_statis_external LIMIT 1;
EOSQL
#+end_src

#+RESULTS:
| statis_date                                                                                    |      |   | type      |   |   | spoa_id |   |   | offer_id |          |   | service_name |         |   | result |   |   | cnt |     |   | amt |     |   | currency |
| -------------+-----------+---------+----------+--------------+---------+-----+-----+---------- |      |   |           |   |   |         |   |   |          |          |   |              |         |   |        |   |   |     |     |   |     |     |   |          |
| 20210507                                                                                       |      |   | os_skrill |   |   |         |   |   |          | Netellel |   |              | SUCCESS |   |        | 1 |   |     | 5.5 |   |     | EUR |   |          |
| (1                                                                                             | row) |   |           |   |   |         |   |   |          |          |   |              |         |   |        |   |   |     |     |   |     |     |   |          |
|                                                                                                |      |   |           |   |   |         |   |   |          |          |   |              |         |   |        |   |   |     |     |   |     |     |   |          |
* alter
#+begin_src sql
ALTER TABLE tbl_name ALTER COLUMN col_name TYPE varchar (11);
ALTER TABLE table_name ADD COLUMN new_column_name data_type constraint;
#+end_src

* Footnotes
* COMMENT Local Variables                                   :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:
